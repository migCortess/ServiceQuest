/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    bottle_cap_blank: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export function CorchoR(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./ChapaR.glb') as GLTFResult

  const ref = useRef<any>(null!)

    useFrame(() => {
        ref.current.rotation.z = Math.PI * 0.15;
    })


  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.bottle_cap_blank.geometry}
        material={materials['Material.001']}
        position={[0, 0, 0]}
        ref={ref}
      />
    </group>
  )
}

useGLTF.preload('./ChapaR.glb')
